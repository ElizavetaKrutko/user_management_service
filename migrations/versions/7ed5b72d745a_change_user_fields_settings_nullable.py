"""Change user fields settings, nullable

Revision ID: 7ed5b72d745a
Revises: 57ce77b48037
Create Date: 2023-07-09 20:55:47.647808

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7ed5b72d745a"
down_revision = "57ce77b48037"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_table", "name", existing_type=sa.VARCHAR(length=50), nullable=True
    )
    op.alter_column("user_table", "surname", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "user_table",
        "phone_number",
        type_=sa.VARCHAR(),
        postgresql_using="phone_number::varchar(32)",
        nullable=True,
    )
    op.alter_column(
        "user_table",
        "role",
        existing_type=postgresql.ENUM("USER", "ADMIN", "MODERATOR", name="role"),
        nullable=True,
    )
    op.alter_column(
        "user_table", "image_path", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "user_table", "is_blocked", existing_type=sa.BOOLEAN(), nullable=True
    )
    op.alter_column(
        "user_table", "modified_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_table",
        "modified_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "user_table", "is_blocked", existing_type=sa.BOOLEAN(), nullable=False
    )
    op.alter_column(
        "user_table", "image_path", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "user_table",
        "role",
        existing_type=postgresql.ENUM("USER", "ADMIN", "MODERATOR", name="role"),
        nullable=False,
    )
    op.alter_column(
        "user_table",
        "phone_number",
        type_=sa.INTEGER(),
        postgresql_using="phone_number::integer()",
        nullable=True,
    )
    op.alter_column(
        "user_table", "name", existing_type=sa.VARCHAR(length=50), nullable=False
    )
    # ### end Alembic commands ###
